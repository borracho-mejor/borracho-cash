import { Project } from "../model/smartBCHProject.js";
import * as Element from "../viewpage/element.js";
import * as FirebaseController from "../controller/firebase_controller.js";
import * as Constant from "../model/constant.js";
import * as Util from "../viewpage/util.js";

let imageFile2Upload;

export function resetImageSelection() {
  imageFile2Upload = null;
  Element.imageTagAddProject.src = "";
}

export function addEventListeners() {
  Element.formAddProject.addEventListener("submit", async (e) => {
    e.preventDefault();
    const button = Element.formAddProject.getElementsByTagName("button")[0];
    // const origLabel = Util.disableButton(button);
    await addNewProject(e);
    // await ProductPage.product_page();
    // Util.enableButton(button, origLabel);
  });
  Element.formImageAddButton.addEventListener("change", (e) => {
    imageFile2Upload = e.target.files[0];
    if (!imageFile2Upload) {
      return;
    }
    const reader = new FileReader();
    reader.onload = () => (Element.imageTagAddProject.src = reader.result);
    reader.readAsDataURL(imageFile2Upload);
    Element.formAddProjectError.image.innerHTML = "";
  });
}

async function addNewProject(e) {
  const name = e.target.name.value;
  const price = e.target.price.value;
  const description = e.target.summary.value;

  // Clear error tags before validating again
  const errorTags = document.getElementsByClassName("error-add-project");
  for (let i = 0; i < errorTags.length; i++) {
    errorTags[i].innerHTML = "";
  }

  const project = new Project({ name, price, description });
  // Check
  const errors = product.validate(imageFile2Upload);
  if (errors) {
    if (errors.name) {
      Element.formAddProjectError.name.innerHTML = errors.name;
    }
    if (errors.price) {
      Element.formAddProjectError.price.innerHTML = errors.price;
    }
    if (errors.summary) {
      Element.formAddProjectError.description.innerHTML = errors.description;
    }
    if (errors.image) {
      Element.formAddProjectError.image.innerHTML = errors.image;
    }
    return;
  }

  try {
    const { imageURL } = await FirebaseController.uploadImage(imageFile2Upload); // No imageName provide, so automatically generated by FirebaseController
    project.logo = imageURL;
    await FirebaseController.addProject(project);

    // Util.popUpInfo("Success!", `${product.name} added!`, "modal-add-product");
  } catch (error) {
    if (Constant.DEV) {
      console.log(error);
    }
    // Util.popUpInfo(
    //   "Failed to Add Product!",
    //   JSON.stringify(error),
    //   "modal-add-product"
    // );
  }
}
